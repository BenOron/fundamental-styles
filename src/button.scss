@import "./settings";
@import "./mixins";
@import "./functions";
@import "./mixins/button/button-helper";
@import "./mixins/button/standard";
@import "./mixins/button/negative";
@import "./mixins/button/positive";
@import "./mixins/button/emphasized";
@import "./mixins/button/light";

$fd-button-border-width: var(--sapButton_BorderWidth);
$fd-button-font-size: var(--sapFontMediumSize);
$fd-button-icon-font-size: 1rem;

$fd-button-clickable-height: 2.75rem;
$fd-button-height: 2.25rem;
$fd-button-touchable-area: ($fd-button-clickable-height - $fd-button-height) / 2;
$fd-button-padding-x: calc(0.625rem - #{$fd-button-border-width});
$fd-button-min-width: 2.25rem;
$fd-button-icon-margin: 0.375rem;
$fd-button-line-height: calc(#{$fd-button-height} - 2 * #{$fd-button-border-width});

$fd-button-compact-clickable-height: 2rem;
$fd-button-compact-height: 1.625rem;
$fd-button-compact-touchable-area: ($fd-button-compact-clickable-height - $fd-button-compact-height) / 2;
$fd-button-compact-padding-x: calc(0.5rem - #{$fd-button-border-width});
$fd-button-compact-min-width: 2rem;
$fd-button-compact-line-height: calc(#{$fd-button-compact-height} - 2 * #{$fd-button-border-width});

$fd-menu-button-max-width: 12rem;
$fd-menu-button-icon-size: 0.75rem;
$fd-menu-button-icon-position-top: 0.716rem;
$fd-menu-button-icon-position-top-compact: 0.403rem;

// anim
$fd-button-transition-params: $fd-animation-speed ease-in !default;

$block: #{$fd-namespace}-button;

@mixin isDisabled() {
  opacity: 0.4;
  cursor: not-allowed;

  &:focus {
    outline: none;
  }
}

@mixin iconSize($size) {
  &::before,
  &::after {
    font-size: $size;
    line-height: $size;
  }
}

@mixin buttonBase() {
  height: $fd-button-height;
  max-height: $fd-button-height;
  min-width: $fd-button-min-width;
  line-height: $fd-button-line-height;

  @include iconSize($fd-button-icon-font-size);

  padding-left: $fd-button-padding-x;
  padding-right: $fd-button-padding-x;
  text-align: center;

  // look
  border-style: solid;
  border-width: $fd-button-border-width;

  // placements
  &::before {
    margin-right: $fd-button-icon-margin;
    vertical-align: text-bottom;
  }

  &::after {
    margin-left: $fd-button-icon-margin;
    vertical-align: middle;
  }

  @include fd-rtl() {
    &::before {
      margin-right: 0;
      margin-left: $fd-button-icon-margin;
    }

    &::after {
      margin-left: 0;
      margin-right: $fd-button-icon-margin;
    }
  }

  &:empty {
    &::before,
    &::after {
      margin-right: 0;
      margin-left: 0;
    }
  }
}

@mixin buttonReset() {
  @include fd-reset();
  @include fd-button-reset();
  @include buttonBase();
}

@mixin compact() {
  // set metrics
  height: $fd-button-compact-height;
  max-height: $fd-button-compact-height;
  min-width: $fd-button-compact-min-width;
  padding-left: $fd-button-compact-padding-x;
  padding-right: $fd-button-compact-padding-x;
  line-height: $fd-button-compact-line-height;
}

@mixin menuCompact() {
  $fd-button-menu-button-padding: 1.469rem;
  $fd-menu-button-icon-position-horizontal: 0.125rem / 2;

  padding-right: $fd-button-menu-button-padding;

  &::after {
    top: $fd-menu-button-icon-position-top-compact;
    right: $fd-menu-button-icon-position-horizontal;
  }

  @include fd-rtl() {
    padding-left: $fd-button-menu-button-padding;
    padding-right: $fd-button-compact-padding-x;

    &::after {
      right: auto;
      left: $fd-menu-button-icon-position-horizontal;
    }
  }
}

@mixin menu() {
  @include fd-icon("navigation-down-arrow", "s", "after");

  $fd-button-menu-button-padding: 1.594rem;
  $fd-menu-button-icon-position-horizontal: 0.1875rem;

  max-width: $fd-menu-button-max-width;
  position: relative;
  overflow: hidden;
  white-space: nowrap;
  text-overflow: ellipsis;
  padding-right: $fd-button-menu-button-padding;

  &::after {
    font-size: $fd-menu-button-icon-size;
    position: absolute;
    top: $fd-menu-button-icon-position-top;
    right: $fd-menu-button-icon-position-horizontal;
    margin-right: $fd-button-icon-margin;
    margin-left: $fd-button-icon-margin;
  }

  &:empty {
    &::before {
      margin-right: 0;
      margin-left: 0;
    }

    &::after {
      margin-right: $fd-button-icon-margin;
      margin-left: $fd-button-icon-margin;
    }
  }

  @include fd-rtl() {
    padding-left: $fd-button-menu-button-padding;
    padding-right: $fd-button-padding-x;

    &::after {
      left: $fd-menu-button-icon-position-horizontal;
      right: auto;
      margin-right: $fd-button-icon-margin;
      margin-left: $fd-button-icon-margin;
    }

    &:empty {
      &::before {
        margin-left: 0;
      }
    }
  }
}

@mixin textAlignment() {
  &-left {
    text-align: left;
  }

  &-right {
    text-align: right;
  }

  &-center {
    text-align: center;
  }
}

@mixin half() {
  height: $fd-button-height / 2;
  max-height: $fd-button-height / 2;
  line-height: 1;

  &.#{$block}--compact {
    height: $fd-button-compact-height / 2;
    max-height: $fd-button-compact-height / 2;
    line-height: 1;
  }
}

@mixin styleButtonContent() {
  > .#{$block}--content {
    @content;
  }
}

@mixin buttonContainer() {
  @include styleButtonContent() {
    @include buttonReset();
  }

  &.#{$block},
  &.#{$block}--standard {
    @include styleButtonContent() {
      @include standard();
    }
  }

  &.#{$block}--positive {
    @include styleButtonContent() {
      @include positive();
    }
  }

  &.#{$block}--negative {
    @include styleButtonContent() {
      @include negative();
    }
  }

  &.#{$block}--emphasized {
    @include styleButtonContent() {
      @include emphasized();
    }
  }

  &.#{$block}--light {
    @include styleButtonContent() {
      @include light();
    }
  }
}

@mixin buttonContainerDisabled() {
  &.#{$block},
  &.#{$block}--standard {
    @include styleButtonContent() {
      @include standardDisabled();
    }
  }

  &.#{$block}--positive {
    @include styleButtonContent() {
      @include positiveDisabled();
    }
  }

  &.#{$block}--negative {
    @include styleButtonContent() {
      @include negativeDisabled();
    }
  }

  &.#{$block}--emphasized {
    @include styleButtonContent() {
      @include emphasizedDisabled();
    }
  }

  &.#{$block}--light {
    @include styleButtonContent() {
      @include lightDisabled();
    }
  }
}

@mixin buttonContainerFocus() {
  box-shadow: none;

  &.#{$block},
  &.#{$block}--standard {
    @include styleButtonContent() {
      @include standardFocus();
    }
  }

  &.#{$block}--positive {
    @include styleButtonContent() {
      @include positiveFocus();
    }
  }

  &.#{$block}--negative {
    @include styleButtonContent() {
      @include negativeFocus();
    }
  }

  &.#{$block}--emphasized {
    @include styleButtonContent() {
      @include negativeFocus();
    }
  }
}

@mixin buttonContainerPressedFocus() {
  box-shadow: none;

  &.#{$block},
  &.#{$block}--standard {
    @include styleButtonContent() {
      @include standardPressedFocus();
    }
  }

  &.#{$block}--positive {
    @include styleButtonContent() {
      @include positivePressedFocus();
    }
  }

  &.#{$block}--negative {
    @include styleButtonContent() {
      @include negativePressedFocus();
    }
  }

  &.#{$block}--emphasized {
    @include styleButtonContent() {
      @include emphasizedPressedFocus();
    }
  }
}

@mixin buttonContainerPressed() {
  &.#{$block},
  &.#{$block}--standard {
    @include styleButtonContent() {
      @include standardPressed();
    }
  }

  &.#{$block}--positive {
    @include styleButtonContent() {
      @include positivePressed();
    }
  }

  &.#{$block}--negative {
    @include styleButtonContent() {
      @include negativePressed();
    }
  }

  &.#{$block}--emphasized {
    @include styleButtonContent() {
      @include emphasizedPressed();
    }
  }
}

@mixin buttonContainerHover() {
  &.#{$block},
  &.#{$block}--standard {
    @include styleButtonContent() {
      @include standardHover();
    }
  }

  &.#{$block}--positive {
    @include styleButtonContent() {
      @include positiveHover();
    }
  }

  &.#{$block}--negative {
    @include styleButtonContent() {
      @include negativeHover();
    }
  }

  &.#{$block}--emphasized {
    @include styleButtonContent() {
      @include emphasizedHover();
    }
  }
}

.#{$block},
a.#{$block} {
  @include fd-button-reset();

  padding-top: $fd-button-touchable-area;
  padding-bottom: $fd-button-touchable-area;
  background-color: transparent;
  cursor: pointer;

  @include buttonContainer();

  @include styleButtonContent() {
    min-width: $fd-button-min-width;
  }

  &--compact {
    padding-top: $fd-button-compact-touchable-area;
    padding-bottom: $fd-button-compact-touchable-area;

    @include styleButtonContent() {
      @include compact();
    }
  }

  &--menu {
    @include styleButtonContent() {
      @include menu();
    }

    &.#{$block}--compact {
      @include styleButtonContent() {
        @include menuCompact();
      }
    }
  }

  &--text-alignment {
    @include styleButtonContent() {
      @include textAlignment();
    }
  }

  &--half {
    @include styleButtonContent() {
      @include half();
    }
  }

  @include fd-hover() {
    @include buttonContainerHover();
  }

  @include fd-active-pressed-selected() {
    outline: none;

    @include buttonContainerPressed();

    @include fd-disabled() {
      @include buttonContainerDisabled();
    }
  }

  @include fd-focus() {
    box-shadow: none;

    @include buttonContainerFocus();

    @include fd-active-pressed-selected() {
      @include buttonContainerPressedFocus();
    }

    @include fd-disabled() {
      @include buttonContainerDisabled();
    }
  }

  @include fd-disabled() {
    cursor: not-allowed;

    @include buttonContainerDisabled();
  }
}
